{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://tree/./src/formatter/fileTreeFormatter.ts","webpack://tree/./src/view/previewPanelManager.ts","webpack://tree/external commonjs \"vscode\"","webpack://tree/./src/provider/fileItemProvider.ts","webpack://tree/external node-commonjs \"fs\"","webpack://tree/external node-commonjs \"path\"","webpack://tree/webpack/bootstrap","webpack://tree/./src/extension.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport {FileItem} from '../provider/fileItemProvider';\r\nimport * as path from 'path';\r\n\r\nexport enum FORMAT_MODE{\r\n\tTAB = 0,\r\n\tLINE,\r\n\tKEISEN,\r\n\tNUM\r\n}\r\n\r\ninterface StringMap { [key: string]: string; }\r\n\r\nlet formatStrSet:StringMap[] = [\r\n\t// for TAB mode\r\n\t{\r\n\t\tU___:\"    \",\r\n\t\tUB__:\"    \",\r\n\t\tU_R_:\"    \",\r\n\t\tUBR_:\"    \",\r\n\t\t____:\"    \"\r\n\t},\r\n\t// LINE mode\r\n\t{\r\n\t\tU___:\"    \",\r\n\t\tUB__:\"|   \",\r\n\t\tU_R_:\" `--\",\r\n\t\tUBR_:\"|`--\",\r\n\t\t____:\"    \"\r\n\t},\r\n\t// keisen mode\r\n\t{\r\n\t\tU___:\"　　\",\r\n\t\tUB__:\"│　\",\r\n\t\tU_R_:\"└─\",\r\n\t\tUBR_:\"├─\",\r\n\t\t____:\"　　\"\r\n\t}\r\n];\r\n\r\nexport class FileTreeFormatter{\r\n\tfileItems:FileItem[];\r\n\trootFolder:FileItem;\r\n\trootFolderPath:string;\r\n\trootRootFolderPath:string;\r\n\trootRetPath:string ;\r\n\tconstructor(fileItems:FileItem[]){\r\n\t\tthis.fileItems = fileItems;\r\n\t\tthis.rootFolder = fileItems[0];\t\t\r\n\t\tthis.rootFolderPath = this.rootFolder.resourceUri.path;\r\n\t\tthis.rootRootFolderPath = path.dirname(this.rootFolderPath);\r\n\t\tthis.rootRetPath \r\n\t\t\t= path.relative(this.rootFolderPath, this.rootFolder.resourceUri.path).replace(/\\\\/g,\"/\");\r\n\t}\r\n\tpublic exec(mode:FORMAT_MODE):string{\r\n\t\tlet header:string;\r\n\t\tif (process.platform === 'win32') {\r\n\t\t\theader = `${this.rootFolderPath.replace(/\\//s, \"\")}/\\n`;\r\n\t\t} else {\r\n\t\t\theader = `${this.rootFolderPath}/\\n`;\r\n\t\t}\r\n\t\tlet fileNum:number = this.fileItems.length;\r\n\t\tlet body:string = \"\";\r\n\t\tlet belowLinePreFixs:string[] = [];\r\n\t\tfor(let index=fileNum-1; index>0; index--){\r\n\t\t\tlet current:FileItem = this.fileItems[index];\r\n\t\t\tlet past:FileItem|null = this.fileItems[index-1];\r\n\t\t\tlet next:FileItem|null = this.fileItems[index+1];\r\n\r\n\t\t\tlet pastVsCurr:boolean[] \r\n\t\t\t= this.pathElemDiff(this.rPath(current),this.rPath(past));\r\n\t\t\tlet currVsNext:boolean[] = [];\r\n\t\t\tlet depth:number = pastVsCurr.length-1;\r\n\t\t\tif(next){\r\n\t\t\t\tcurrVsNext = this.pathElemDiff(this.rPath(current),this.rPath(next));\r\n\t\t\t}else{\r\n\t\t\t\tfor(let i=0;i<=depth;i++){\r\n\t\t\t\t\tcurrVsNext.push(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet currentPreFixs:string[] = [];\r\n\t\t\tlet line:string[] = [];\r\n\t\t\tfor(let d=0;d<=depth;d++){\r\n\t\t\t\tlet Upper:string = pastVsCurr[d]===true?\"U\":\"_\";\r\n\t\t\t\tlet Bottom:string = currVsNext[d]===true?\"B\":\"_\";\r\n\t\t\t\tlet Right:String = (d === depth)?\"R\":\"_\";\r\n\t\t\t\tlet preFixId:string= `${Upper}${Bottom}${Right}_`;\r\n\t\t\t\tcurrentPreFixs.push(preFixId);\r\n\t\t\t\tif(index===fileNum-1){\r\n\t\t\t\t\tline.push(formatStrSet[mode][currentPreFixs[d]]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlet preFix = formatStrSet[mode][currentPreFixs[d]];\r\n\t\t\t\t\tif(belowLinePreFixs[d] === formatStrSet[mode][\"____\"]){\r\n\t\t\t\t\t\tif((currentPreFixs[d] === \"UB__\")) {\r\n\t\t\t\t\t\t\tpreFix = formatStrSet[mode][\"____\"];\r\n\t\t\t\t\t\t}else\r\n\t\t\t\t\t\tif( (currentPreFixs[d] === \"UBR_\") ){\r\n\t\t\t\t\t\t\tpreFix = formatStrSet[mode][\"U_R_\"];\r\n\t\t\t\t\t\t}else\r\n\t\t\t\t\t\tif( (currentPreFixs[d] === \"UBR_\") ){\r\n\t\t\t\t\t\t\tpreFix = formatStrSet[mode][\"U_R_\"];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tline.push(preFix);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbelowLinePreFixs = line;\r\n\t\t\tbody = line.join(\"\") + current.label + \"\\n\" + body;\r\n\t\t}\r\n\t\t\r\n\t\treturn header+body;\r\n\t}\r\n\tprivate genPrefixIdx(past:FileItem, current:FileItem, next:FileItem|null):string[]{\r\n\t\tlet ret:string[] = [];\r\n\t\tlet pastVsCurr:boolean[] \r\n\t\t= this.pathElemDiff(this.rPath(current),this.rPath(past));\r\n\t\tlet currVsNext:boolean[] = [];\r\n\t\tlet endIdx:number = pastVsCurr.length-1;\r\n\t\tif(next){\r\n\t\t\tcurrVsNext = this.pathElemDiff(this.rPath(current),this.rPath(next));\r\n\t\t}else{\r\n\t\t\tfor(let i=0;i<=endIdx;i++){\r\n\t\t\t\tcurrVsNext.push(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor(let i=0;i<=endIdx;i++){\r\n\t\t\tlet Upper:string = pastVsCurr[i]===true?\"U\":\"_\";\r\n\t\t\tlet Bottom:string = currVsNext[i]===true?\"B\":\"_\";\r\n\t\t\tlet Right:String = (i === endIdx)?\"R\":\"_\";\r\n\t\t\tlet preFixId:string= `${Upper + Bottom + Right}_`;\r\n\t\t\tret.push(preFixId);\r\n\t\t}\r\n\t\t\r\n\t\treturn ret;\r\n\t}\r\n\tprivate rPath(file:FileItem):string {\r\n\t\treturn \"./\"+path.relative(this.rootFolderPath, file.resourceUri.path).replace(/\\\\/g,\"/\");\r\n\t}\r\n\tprivate pathElemDiff(aPath:string, bPath:string):boolean[]{\r\n\t\tlet ret:boolean[]=[];\r\n\t\tlet aElems:string[] = aPath.split(\"/\");\r\n\t\tlet bElems:string[] = bPath.split(\"/\");\r\n\r\n\t\tfor(let i=0;i<aElems.length-1;i++){\r\n\t\t\tif(bElems[i]){\r\n\t\t\t\tif(aElems[i] === bElems[i]){\r\n\t\t\t\t\tret.push(true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tret.push(false);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tret.push(false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\tprivate countFolderDepth(str:string):number{\r\n\t\tlet ret:number = 1;\r\n\t\tlet m:RegExpMatchArray|null = str.match(/(\\\\|\\/)/g);\r\n\t\tif(m !== null){\r\n\t\t\tret += m.length;\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n}","import * as vscode from 'vscode';\r\n\r\nexport class PreviewPanelManager {\r\n\tpublic show(treeViewStr: string, title: string) {\r\n\t\tconst panel = vscode.window.createWebviewPanel(\r\n\t\t\t'treePreview',\r\n\t\t\t`Tree from \"${title}\"`,\r\n\t\t\tvscode.ViewColumn.Beside,\r\n\t\t\t{}\r\n\t\t);\r\n\r\n\t\tconst escaped = this.escapeHtml(treeViewStr);\r\n\t\tpanel.webview.html = this.buildHtml(`Tree from: ${this.escapeHtml(title)}`, `<h3>File Tree</h3><pre>${escaped}</pre>`);\r\n\t}\r\n\r\n\tprivate buildHtml(title: string, bodyInner: string): string {\r\n\t\treturn `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"UTF-8\" />\r\n<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src 'unsafe-inline';\">\r\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n<title>${title}</title>\r\n<style>\r\nbody{font-family:var(--vscode-font-family,Arial);padding:12px;line-height:1.4;}\r\npre{background:var(--vscode-editor-background,#1e1e1e);color:var(--vscode-editor-foreground,#d4d4d4);padding:8px 10px;border-radius:4px;overflow:auto;font-size:12px;}\r\ncode{font-family:var(--vscode-editor-font-family,Consolas,monospace);}\r\nh3{margin-top:0;}\r\n</style>\r\n</head>\r\n<body>\r\n${bodyInner}\r\n</body>\r\n</html>`;\r\n\t}\r\n\r\n\tprivate escapeHtml(src: string): string {\r\n\t\treturn src\r\n\t\t\t.replace(/&/g, '&amp;')\r\n\t\t\t.replace(/</g, '&lt;')\r\n\t\t\t.replace(/>/g, '&gt;')\r\n\t\t\t.replace(/\"/g, '&quot;');\r\n\t}\r\n}","module.exports = require(\"vscode\");","import * as vscode from 'vscode';\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\n\r\nexport class FileTreeItemsProvider implements vscode.TreeDataProvider<FileItem> {\r\n\tfileTree:FileItem[] | undefined;\r\n\tprivate _onDidChangeTreeData: vscode.EventEmitter<FileItem | undefined | null | void> = new vscode.EventEmitter<FileItem | undefined | null | void>();\r\n\treadonly onDidChangeTreeData: vscode.Event<FileItem | undefined | null | void> = this._onDidChangeTreeData.event;\r\n\tworkspaceRoots:vscode.WorkspaceFolder[] = [];\r\n\r\n\tconstructor(workspaceRoots: vscode.WorkspaceFolder[]) { \r\n\t\tthis.workspaceRoots = workspaceRoots;\r\n\t}\r\n\r\n\tgetTreeItem(element: FileItem): vscode.TreeItem {\r\n\t\treturn element;\r\n\t}\r\n\r\n\tgetChildren(element?: FileItem): Thenable<FileItem[]> {\r\n\t\tif(element === undefined){\r\n\t\t\t// for workspace root case\r\n\t\t\tlet newFileColState:vscode.TreeItemCollapsibleState = vscode.TreeItemCollapsibleState.Expanded;\r\n\t\t\tlet workspaceRootFileItems:FileItem[] = [];\r\n\t\t\tfor (let ws of this.workspaceRoots) {\r\n\t\t\t\tworkspaceRootFileItems.push(new FileItem(\"${workspaceRoot} \" + `(${ws.name})`, ws.uri, newFileColState));\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tthis.fileTree = workspaceRootFileItems;\r\n\t\t\treturn Promise.resolve(workspaceRootFileItems);\r\n\t\t}else{\r\n\t\t\t// for folder or file case\r\n\t\t\treturn new Promise((resolve)=>{\r\n\t\t\t\tthis.getFiles(element.resourceUri).then((children:FileItem[])=>{\r\n\t\t\t\t\tchildren = this.sortFileItems(children);\r\n\t\t\t\t\telement.child = children;\r\n\t\t\t\t\tresolve(children);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\ttreeCmd(rootElement: FileItem): FileItem[]{\r\n\t\tlet ret:FileItem[] = [rootElement];\r\n\r\n\t\tif(rootElement.collapsibleState === vscode.TreeItemCollapsibleState.Expanded){\r\n\t\t\t// rootから下を探索して列挙\r\n\t\t\tfor(let c of rootElement.child){\r\n\t\t\t\tif((c.collapsibleState === vscode.TreeItemCollapsibleState.Expanded) &&\r\n\t\t\t\t\t(c.child.length > 0)){\r\n\t\t\t\t\t// 折りたたみ解除 && 子供があったら再帰的にtree\r\n\t\t\t\t\tlet add = this.treeCmd(c);\r\n\t\t\t\t\tret.push(...add);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tret.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t}\r\n\r\n\trefresh(): void {\r\n\t\tthis._onDidChangeTreeData.fire();\r\n\t}\r\n\tsortFileItems(fileItems:FileItem[]): FileItem[] {\r\n\t\tlet folders:FileItem[] = [];\r\n\t\tlet files:FileItem[] = [];\r\n\t\tlet ret:FileItem[] = [];\r\n\t\t// select folder/file\r\n\t\tfileItems.forEach((f:FileItem)=>{\r\n\t\t\tlet path = f.resourceUri.fsPath;\r\n\t\t\tif(fs.lstatSync(path).isDirectory() ){\r\n\t\t\t\tfolders.push(f);\r\n\t\t\t}else{\r\n\t\t\t\tfiles.push(f);\r\n\t\t\t}\r\n\t\t});\r\n\t\t// sort folder group\r\n\t\tfolders.sort((a:FileItem, b:FileItem)=>{\r\n\t\t\treturn a.label.localeCompare(b.label);\r\n\t\t});\r\n\r\n\t\t// sort file group\r\n\t\tfiles.sort((a:FileItem, b:FileItem)=>{\r\n\t\t\treturn a.label.localeCompare(b.label);\r\n\t\t});\r\n\r\n\t\t// merge\r\n\t\tret = folders.concat(files);\r\n\r\n\t\treturn ret;\r\n\t}\r\n\tprivate getFiles(rootUri: vscode.Uri): Thenable<FileItem[]>{\r\n\t\treturn new Promise((resolve)=>{\r\n\t\t\tlet fileItems:FileItem[] = [];\r\n\t\t\r\n\t\t\tvscode.workspace.fs.readDirectory(rootUri).then((value)=>{\r\n\t\t\t\tvalue.forEach((value,index,array)=>{\r\n\t\t\t\t\tlet newFileName = value[0];\r\n\t\t\t\t\tlet newFileType:vscode.FileType = value[1];\r\n\t\t\t\t\tlet newFileFullUri:vscode.Uri = vscode.Uri.joinPath(rootUri,newFileName);\r\n\t\t\t\t\tlet newFileColState:vscode.TreeItemCollapsibleState;\r\n\t\t\t\t\tif(newFileType === vscode.FileType.Directory){\r\n\t\t\t\t\t\tnewFileColState = vscode.TreeItemCollapsibleState.Collapsed;\r\n\t\t\t\t\t\tnewFileName += \"/\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tnewFileColState = vscode.TreeItemCollapsibleState.None;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet newFileItem:FileItem =\r\n\t\t\t\t\t\tnew FileItem(newFileName, newFileFullUri, newFileColState);\r\n\t\t\t\t\tfileItems.push(newFileItem);\r\n\t\t\t\t});\r\n\t\t\t\tresolve(fileItems);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tprivate pathExists(p: string): boolean {\r\n\t\ttry {\r\n\t\t\tfs.accessSync(p);\r\n\t\t} catch (err) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport class FileItem extends vscode.TreeItem {\r\n\tpublic child:FileItem[] = [];\r\n\tconstructor(\r\n\t\tpublic readonly label: string, \r\n\t\tpublic readonly resourceUri: vscode.Uri,\r\n\t\tpublic collapsibleState: vscode.TreeItemCollapsibleState){\r\n\t\tsuper(label, collapsibleState);\r\n\t}\r\n}\r\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { FileTreeFormatter, FORMAT_MODE } from './formatter/fileTreeFormatter';\r\nimport * as vscode from 'vscode';\r\nimport { FileTreeItemsProvider, FileItem } from './provider/fileItemProvider';\r\nimport {PreviewPanelManager} from './view/previewPanelManager';\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n\tlet fileTreeItemsProvider: FileTreeItemsProvider | null = null;\r\n\tlet fileTreeView: vscode.TreeView<FileItem>;\r\n\r\n\t// get workspace folders\r\n\tlet workspaceFolders: vscode.WorkspaceFolder[] | undefined \r\n\t\t= vscode.workspace.workspaceFolders as vscode.WorkspaceFolder[] | undefined;\r\n\r\n\t// Create Tree View UI Components\r\n\tif (workspaceFolders) {\r\n\t\t// if exist workspace, show a file tree item\r\n\t\tfileTreeItemsProvider = new FileTreeItemsProvider(workspaceFolders);\r\n\t\tfileTreeView = vscode.window.createTreeView('fileTree', {\t\r\n\t\t\tshowCollapseAll:false,\r\n\t\t\ttreeDataProvider: fileTreeItemsProvider\r\n\t\t});\r\n\t\tfileTreeView.onDidCollapseElement((e: vscode.TreeViewExpansionEvent<FileItem>) => {\r\n\t\t\te.element.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\r\n\t\t});\r\n\t\tfileTreeView.onDidExpandElement((e: vscode.TreeViewExpansionEvent<FileItem>) => {\r\n\t\t\te.element.collapsibleState = vscode.TreeItemCollapsibleState.Expanded;\r\n\t\t});\t\r\n\t}\r\n\r\n\t// Add `tree` cmd to show tree view in vscode\r\n\tlet disposable = vscode.commands.registerCommand('tree.cmd', (fileItem: FileItem) => {\r\n\t\tif (fileTreeItemsProvider) {\r\n\t\t\tlet ret: FileItem[] = fileTreeItemsProvider.treeCmd(fileItem);\r\n\t\t\tlet treeViewStr:string = new FileTreeFormatter(ret).exec(FORMAT_MODE.KEISEN);\r\n\r\n\t\t\t// show tree view\r\n\t\t\tlet config = vscode.workspace.getConfiguration();\r\n\t\t\tif (config?.get<string>(\"tree.view-type\") === \"TextEditor\") {\r\n\t\t\t\tvscode.commands.executeCommand(\"workbench.action.files.newUntitledFile\").then(() => {\r\n\t\t\t\t\tshowTreeViewTextEditor(treeViewStr.trimEnd(), fileItem.resourceUri.fsPath);\r\n\t\t\t\t});\t\r\n\t\t\t} else if (config?.get<string>(\"tree.view-type\") === \"WebViewPanel\") {\r\n\t\t\t\tnew PreviewPanelManager().show(treeViewStr, fileItem.resourceUri.path);\r\n\t\t\t} else {\r\n\t\t\t\tnew PreviewPanelManager().show(treeViewStr, fileItem.resourceUri.path);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvscode.window.showInformationMessage('Open a folder or workspace to use Tree view.');\r\n\t\t}\r\n\t});\r\n\tcontext.subscriptions.push(disposable);\r\n\r\n\t// add refresh cmd\r\n\tdisposable = vscode.commands.registerCommand('tree.refreshEntry', () =>\r\n\t\tfileTreeItemsProvider?.refresh()\r\n\t);\r\n\tcontext.subscriptions.push(disposable);\r\n}\r\n\r\nasync function showTreeViewTextEditor(treeViewStr: string, rootPath: string): Promise<void> {\r\n\tlet editor = vscode.window.activeTextEditor;\r\n\tlet doc = editor?.document;\r\n\tif (doc) {\r\n\t\tvscode.languages.setTextDocumentLanguage(doc, \"markdown\");\r\n\t\tvscode.window.activeTextEditor?.edit((editBuilder) => {\r\n\t\t\tlet startPos = new vscode.Position(0, 0);\r\n\t\t\tlet mdTxt: string = `# Tree View\r\n## Root path: \r\n${rootPath}\r\n\r\n## Content\r\n\\`\\`\\`bash\r\n${treeViewStr}\r\n\\`\\`\\`\r\n`;\r\n\t\t\teditBuilder.insert(startPos, mdTxt);\r\n\t\t});\r\n\t}\r\n\treturn;\r\n}\r\n\r\n// this method is called when your extension is deactivated\r\nexport function deactivate() { }\r\n"],"names":["FORMAT_MODE","formatStrSet","U___","UB__","U_R_","UBR_","____","constructor","fileItems","this","rootFolder","rootFolderPath","resourceUri","path","rootRootFolderPath","dirname","rootRetPath","relative","replace","exec","mode","header","process","platform","fileNum","length","body","belowLinePreFixs","index","current","past","next","pastVsCurr","pathElemDiff","rPath","currVsNext","depth","i","push","currentPreFixs","line","d","preFixId","preFix","join","label","genPrefixIdx","ret","endIdx","file","aPath","bPath","aElems","split","bElems","countFolderDepth","str","m","match","show","treeViewStr","title","panel","vscode","window","createWebviewPanel","ViewColumn","Beside","escaped","escapeHtml","webview","html","buildHtml","bodyInner","src","module","exports","require","workspaceRoots","_onDidChangeTreeData","EventEmitter","onDidChangeTreeData","event","getTreeItem","element","getChildren","undefined","newFileColState","TreeItemCollapsibleState","Expanded","workspaceRootFileItems","ws","FileItem","name","uri","fileTree","Promise","resolve","getFiles","then","children","sortFileItems","child","treeCmd","rootElement","collapsibleState","c","add","refresh","fire","folders","files","forEach","f","fsPath","fs","lstatSync","isDirectory","sort","a","b","localeCompare","concat","rootUri","workspace","readDirectory","value","array","newFileName","newFileType","newFileFullUri","Uri","joinPath","FileType","Directory","Collapsed","None","newFileItem","pathExists","p","accessSync","err","TreeItem","super","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","context","fileTreeView","fileTreeItemsProvider","workspaceFolders","FileTreeItemsProvider","createTreeView","showCollapseAll","treeDataProvider","onDidCollapseElement","e","onDidExpandElement","disposable","commands","registerCommand","fileItem","FileTreeFormatter","KEISEN","config","getConfiguration","get","executeCommand","async","rootPath","editor","activeTextEditor","doc","document","languages","setTextDocumentLanguage","edit","editBuilder","startPos","Position","mdTxt","insert","showTreeViewTextEditor","trimEnd","PreviewPanelManager","showInformationMessage","subscriptions"],"sourceRoot":""}